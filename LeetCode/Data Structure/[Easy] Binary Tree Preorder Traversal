# https://leetcode.com/problems/binary-tree-preorder-traversal/

# Preorder - Traverse the tree from left to right, recording node when first visited

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        preorder = []
        right_node = []
        
        while root:
            preorder.append(root.val)
            
            if root.right:
                right_node.append(root.right)
            
            if root.left:
                root = root.left
            elif right_node:
                root = right_node.pop()
            else:
                break
        
        return preorder

# Time complexity: O(n)
# Space complexity: O(n)
