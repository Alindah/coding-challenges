# https://leetcode.com/problems/reverse-linked-list/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        if not head:
            return head
        
        arr = []
        
        # Put all nodes into array.
        while head:
            arr.append(head.val)
            head = head.next

        head = ListNode()
        pointer = head
        
        for i in range(len(arr) - 1, -1, -1):
            pointer.val = arr[i]
            
            # Check if end and break out if so.
            if i - 1 < 0:
                break
                
            pointer.next = ListNode()
            pointer = pointer.next
        
        return head
    
# Time complexity: O(n)
# Space complexity: O(n)
